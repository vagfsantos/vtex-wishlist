(function(APP, GLOBAL){
    // CHECK IF WISHLIST GLOBAL IS SET
    if( !APP ){
        GLOBAL.WISHLIST = {};
        APP = GLOBAL.WISHLIST;
        
        if( !APP._Util ){
            APP._Util = {};
        }
    }
    
    // GLOBAL WISHLIST CONFIGURATION
    var _defaultConfig = {
        headers: {
            'Accept': 'application/vnd.vtex.ds.v10+json',
            'Content-Type': 'application/json'
        },
        
        storeName: null,
        dbName: null,
        dbAlias: null,
        columnId: null,
        columnUser: null,
        onIncompleteRegistration: null,
        
        userEmail: null,
        urlSearchClient: function(){
            return 'https://api.vtexcrm.com.br/'+this.storeName+'/dataentities/CL/search?_where=email=' + this.userEmail +'&_fields=id'
        }
    }
    
    var Config = {
        // SET AND SUBSCRIBE THE DEFAULT CONFIGURATION
        set: function(obj){
            for( var i in obj ){
                if( obj.hasOwnProperty(i) ){
                    _defaultConfig[i] = obj[i]
                }
            }
        },
        
        // RETURNS CONFIGURATION
        get: function(){
            return _defaultConfig;
        },
        
        completeRegistration: function(){
            if( typeof _defaultConfig.onIncompleteRegistration === 'function' ){
                _defaultConfig.onIncompleteRegistration();
            }else{
                console.log('o parâmetro "onIncompleteRegistration" não foi passado corretamente, certifique-se de ter passado uma função');
            }
        }
    }
    
    APP._Util.Config = Config;
    
})( window.WISHLIST, window);
(function(APP, GLOBAL){
    // CHECK IF WISHLIST GLOBAL IS SET
    if( !APP ){
        GLOBAL.WISHLIST = {};
        APP = GLOBAL.WISHLIST;
        
        if( !APP._Util ){
            APP._Util = {};
        }
    }
    
    // PRIVATE VALUES FOR PRODUCT IDS CACHED
    var _storedValues = [];
    
    var Data = {
        // ADD A PRODUCT ID TO STORED ARRAY
        add: function(id){
            if( _storedValues.indexOf(id) === -1 ){
                _storedValues.push(id);
                Event.on('added');
                console.log('o id: ' +id+ ' foi adicionado a store');
            }else{
                console.log('o id: ' +id+ ' já estava adicionado na store');
            }
        },
        
        // DELETE A PRODUCT ID TO STORED ARRAY
        delete: function(id){
            var index = _storedValues.indexOf(id);
            if( index !== -1 ){
                _storedValues.splice(index, 1);
                console.log('o id: '+id+ ' foi deletado da store');
                return;
            }
            
            console.log('o id: ' +id+ ' não foi encontrado na store');
        },
        
        // RETURN DATA STORAGED
        getData: function(){
            return _storedValues;
        },
        
        cleanData: function(){
            _storedValues = [];
        }
    };
    
    var Event = {
        types: {
            config: {
                lastInteration: 0,
                delay: 500
            },
            
            added: function(){
                var _this = this;
                var MasterData = APP._Util.MasterData;
                
                window.setTimeout(function(){
                    var current = new Date().getTime();
                    var diff = current - this.lastInteration;
                    if( diff > _this.config.delay - 100 ){
                        MasterData.saveProducts();
                        console.log(_storedValues);
                    }
                }, _this.config.delay);
                
                lastInteration = new Date().getTime();
            }
        },
        
        on: function(eventName){
            if( this.types[eventName] ){
                this.types[eventName]();
            }
        }
    }
    
    APP._Util.Data = Data;
    
})( window.WISHLIST, window);
(function(APP, GLOBAL){
    // CHECK IF WISHLIST GLOBAL IS SET
    if( !APP ){
        GLOBAL.WISHLIST = {};
        APP = GLOBAL.WISHLIST;
        
        if( !APP._Util ){
            APP._Util = {};
        }
    }
    
    var Login = {
        // RETURNS LOGGED USER
        userIsLogged: function(callback){
            $.ajax('/no-cache/profileSystem/getProfile')
            .fail(function(error){
                console.log(error);
                console.log('Não foi possível acessar a API de Profile da vtex');
            })
            .success(function(user){
                if( user ){
                    // CALL VTEX LOGIN POP UP
                    if( !user.IsUserDefined ){
                        try{
                            vtexid.start({
                                returnUrl: '',
                                userEmail: '',
                                locale: 'pt-BR',
                                forceReload: false
                            });
                        }catch(e){
                            console.log(e);
                            console.log('Erro ao tentar abrir o PopUp de login, certifique-se de que o controle <vtex.cmc:welcomeMessage/> esteja na página');
                        }
                    }
                    else if( user.IsUserDefined &&  !data.FirstName ){
                        APP._Util.Config.completeRegistration();
                    }else{
                        if( typeof callback === 'function' ){
                            callback.call(user);
                        }
                    }
                }else{
                    console.log('Resposta da API getProfile não definida');
                }
            })
            .done(function(){
                console.log('Consulta na API de profile finalizada');
            });
        }
    }
    
    APP._Util.Login = Login;
    
})( window.WISHLIST, window);
(function(APP, GLOBAL){
    // CHECK IF WISHLIST GLOBAL IS SET
    if( !APP ){
        GLOBAL.WISHLIST = {};
        APP = GLOBAL.WISHLIST;
        
        if( !APP._Util ){
            APP._Util = {};
        }
    }
    
    var MasterData = {
        getUserId: function(){
            APP._Util.Login.userIsLogged(function(data){
                console.log('-----------------');
                console.log(data);
            })
        },
        
        getProducts: function(){
           
        },
        
        saveProducts: function(){
           
        }
    }
    
    APP._Util.MasterData = MasterData;
    
})( window.WISHLIST, window);
(function(APP, GLOBAL){
    // CHECK IF WISHLIST GLOBAL IS SET
    
    if( !APP ){
        GLOBAL.WISHLIST = {};
        APP = GLOBAL.WISHLIST;
    }
    
    var _userIsLogged = APP._Util.Login.userIsLogged;
    var _config = APP._Util.Config.get();
    
    
    var Core = {
        save: function(){
            
        }
    };
    
    APP._Util.Core = Core;
    
})( window.WISHLIST, window );
(function(APP, GLOBAL){
    // CHECK IF WISHLIST GLOBAL IS SET
    if( !APP ){
        GLOBAL.WISHLIST = {};
        APP = GLOBAL.WISHLIST;
    }
    
    var Core = APP._Util.Core;
    var Data = APP._Util.Data;
    var Config = APP._Util.Config;
    
    
    APP.add = function(id){
        Data.add.apply(Data, [id]);
        return this;
    }
    
    APP.delete = function(id){
        Data.delete.apply(Data, [id]);
        return this;
    }
    
    APP.getIds = function(){
        return Data.getData.apply(Data);
    }
    
    APP.clean = function(){
        return Data.cleanData.apply(Data);
    }
    
    APP.getShelfs = function(){
        
    }
    
    APP.config = function(obj){
       Config.set.apply(Config, [obj]);
    },
        
    APP.getConfig = function(){
        return Config.get.apply(Config, []);
    }
    
})( window.WISHLIST, window);